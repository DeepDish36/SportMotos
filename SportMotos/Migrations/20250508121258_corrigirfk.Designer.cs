// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SportMotos.Models;

#nullable disable

namespace SportMotos.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250508121258_corrigirfk")]
    partial class corrigirfk
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Pedidos", b =>
                {
                    b.Property<int>("IdPedido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_Pedido");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPedido"));

                    b.Property<int?>("ClienteIdCliente")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataCompra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("DataCompra")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int")
                        .HasColumnName("ID_Cliente");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasDefaultValue("Pendente")
                        .HasColumnName("Status");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("IdPedido")
                        .HasName("PK__Pedidos__ID_Pedido");

                    b.HasIndex("ClienteIdCliente");

                    b.HasIndex("IdCliente");

                    b.ToTable("Pedidos", (string)null);
                });

            modelBuilder.Entity("SportMotos.Models.Admin", b =>
                {
                    b.Property<int>("IdAdmin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_Admin");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAdmin"));

                    b.Property<DateTime?>("ApagadoEm")
                        .HasColumnType("datetime")
                        .HasColumnName("Apagado_Em");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime")
                        .HasColumnName("Data_Criacao");

                    b.Property<DateTime?>("DataEdicao")
                        .HasColumnType("datetime")
                        .HasColumnName("Data_Edicao");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(90)
                        .IsUnicode(false)
                        .HasColumnType("varchar(90)");

                    b.Property<string>("Telefone")
                        .HasMaxLength(9)
                        .IsUnicode(false)
                        .HasColumnType("char(9)")
                        .IsFixedLength();

                    b.HasKey("IdAdmin")
                        .HasName("PK__Admin__69F567662E7796DA");

                    b.HasIndex(new[] { "Nome" }, "UQ__Admin__7D8FE3B2D8F144B3")
                        .IsUnique();

                    b.ToTable("Admin", (string)null);
                });

            modelBuilder.Entity("SportMotos.Models.AnuncioMoto", b =>
                {
                    b.Property<int>("IdAnuncioMoto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_Anuncio");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAnuncioMoto"));

                    b.Property<DateTime?>("ApagadoEm")
                        .HasColumnType("datetime")
                        .HasColumnName("Apagado_Em");

                    b.Property<int?>("Avaliacoes")
                        .HasColumnType("int");

                    b.Property<string>("Condicao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("DataEdicao")
                        .HasColumnType("datetime")
                        .HasColumnName("Data_Edicao");

                    b.Property<DateTime?>("DataExpiracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataPublicacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("Data_Publicacao")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("DataVenda")
                        .HasColumnType("datetime")
                        .HasColumnName("Data_Venda");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<int?>("Favoritos")
                        .HasColumnType("int");

                    b.Property<int>("IdMoto")
                        .HasColumnType("int")
                        .HasColumnName("ID_Moto");

                    b.Property<double>("Preco")
                        .HasColumnType("float");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<bool>("Vendido")
                        .HasColumnType("bit");

                    b.Property<int?>("Visualizacoes")
                        .HasColumnType("int");

                    b.HasKey("IdAnuncioMoto")
                        .HasName("PK__Anuncio___D8875FB6B9698F13");

                    b.HasIndex("IdMoto");

                    b.ToTable("Anuncio_Moto", (string)null);
                });

            modelBuilder.Entity("SportMotos.Models.AnuncioPeca", b =>
                {
                    b.Property<int>("IdAnuncioPeca")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_Anuncio");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAnuncioPeca"));

                    b.Property<DateTime?>("ApagadoEm")
                        .HasColumnType("datetime")
                        .HasColumnName("Apagado_Em");

                    b.Property<int?>("Avaliacoes")
                        .HasColumnType("int");

                    b.Property<string>("Condicao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("DataEdicao")
                        .HasColumnType("datetime")
                        .HasColumnName("Data_Edicao");

                    b.Property<DateTime?>("DataExpiracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataPublicacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("Data_Publicacao")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("DataVenda")
                        .HasColumnType("datetime")
                        .HasColumnName("Data_Venda");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<int?>("Favoritos")
                        .HasColumnType("int");

                    b.Property<int>("IdPeca")
                        .HasColumnType("int")
                        .HasColumnName("ID_Peca");

                    b.Property<double>("Preco")
                        .HasColumnType("float");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<bool>("Vendido")
                        .HasColumnType("bit");

                    b.Property<int?>("Visualizacoes")
                        .HasColumnType("int");

                    b.HasKey("IdAnuncioPeca")
                        .HasName("PK__Anuncio___D8875FB67FD7777D");

                    b.HasIndex("IdPeca");

                    b.ToTable("Anuncio_Peca", (string)null);
                });

            modelBuilder.Entity("SportMotos.Models.CarrinhoCompras", b =>
                {
                    b.Property<int>("IdCarrinho")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_Carrinho");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCarrinho"));

                    b.Property<DateTime?>("DataAdicionado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("DataAdicionado")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int")
                        .HasColumnName("ID_Cliente");

                    b.Property<int>("IdPeca")
                        .HasColumnType("int")
                        .HasColumnName("ID_Peca");

                    b.Property<int>("Quantidade")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1)
                        .HasColumnName("Quantidade");

                    b.HasKey("IdCarrinho")
                        .HasName("PK__CarrinhoCompras__ID_Carrinho");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdPeca");

                    b.ToTable("CarrinhoCompras", (string)null);
                });

            modelBuilder.Entity("SportMotos.Models.Cliente", b =>
                {
                    b.Property<int>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_Cliente");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCliente"));

                    b.Property<DateTime?>("ApagadoEm")
                        .HasColumnType("datetime")
                        .HasColumnName("Apagado_Em");

                    b.Property<string>("CodPostal")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime")
                        .HasColumnName("Data_Criacao");

                    b.Property<DateTime?>("DataEdicao")
                        .HasColumnType("datetime")
                        .HasColumnName("Data_Edicao");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Genero")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .IsFixedLength();

                    b.Property<byte?>("Idade")
                        .HasColumnType("tinyint");

                    b.Property<string>("Morada")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<bool>("ReceberNewsletter")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("ResetToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ResetTokenExpiration")
                        .HasColumnType("datetime2");

                    b.Property<string>("Rua")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Sobrenome")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("Status")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Telefone")
                        .HasMaxLength(9)
                        .IsUnicode(false)
                        .HasColumnType("char(9)")
                        .IsFixedLength();

                    b.Property<DateTime?>("UltimoLogin")
                        .HasColumnType("datetime")
                        .HasColumnName("Ultimo_Login");

                    b.HasKey("IdCliente")
                        .HasName("PK__Cliente__E005FBFF59875125");

                    b.HasIndex(new[] { "Nome" }, "UQ__Cliente__7D8FE3B2B0CEC7A9")
                        .IsUnique();

                    b.ToTable("Cliente", (string)null);
                });

            modelBuilder.Entity("SportMotos.Models.EnderecosEnvio", b =>
                {
                    b.Property<int>("IdEnvio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_Envio");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEnvio"));

                    b.Property<string>("Apelido")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CodigoPostal")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int")
                        .HasColumnName("ID_Cliente");

                    b.Property<string>("Localidade")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("RetiradaNaLoja")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("RetiradaNaLoja");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("IdEnvio");

                    b.HasIndex("IdCliente");

                    b.ToTable("EnderecosEnvio", (string)null);
                });

            modelBuilder.Entity("SportMotos.Models.Favoritos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataAdicionado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("DataAdicionado")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("Id_Anuncio")
                        .HasColumnType("int")
                        .HasColumnName("Id_Anuncio");

                    b.Property<int>("Id_Cliente")
                        .HasColumnType("int")
                        .HasColumnName("Id_Cliente");

                    b.Property<string>("TipoAnuncio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TipoAnuncio");

                    b.HasKey("Id")
                        .HasName("PK__Favoritos");

                    b.HasIndex("Id_Anuncio");

                    b.HasIndex("Id_Cliente");

                    b.ToTable("Favoritos", (string)null);
                });

            modelBuilder.Entity("SportMotos.Models.Forum", b =>
                {
                    b.Property<int>("IdForum")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_Forum");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdForum"));

                    b.Property<DateTime?>("ApagadoEm")
                        .HasColumnType("datetime")
                        .HasColumnName("Apagado_Em");

                    b.Property<string>("Categoria")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Categoria");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime")
                        .HasColumnName("Data_Criacao");

                    b.Property<DateTime?>("DataEdicao")
                        .HasColumnType("datetime")
                        .HasColumnName("Data_Edicao");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Ativo")
                        .HasColumnName("Estado");

                    b.Property<int?>("IdAdmin")
                        .HasColumnType("int")
                        .HasColumnName("ID_Admin");

                    b.Property<int?>("IdCliente")
                        .HasColumnType("int")
                        .HasColumnName("ID_Cliente");

                    b.Property<int>("Likes")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("Likes");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<int>("TotalRespostas")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("Total_Respostas");

                    b.Property<DateTime?>("UltimaResposta")
                        .HasColumnType("datetime")
                        .HasColumnName("Ultima_Resposta");

                    b.Property<int>("Visualizacoes")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("Visualizacoes");

                    b.HasKey("IdForum")
                        .HasName("PK_Forum");

                    b.HasIndex("IdAdmin");

                    b.HasIndex("IdCliente");

                    b.ToTable("Forum", (string)null);
                });

            modelBuilder.Entity("SportMotos.Models.Imagem", b =>
                {
                    b.Property<string>("NomeArquivo")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("NomeArquivo");

                    b.Property<string>("Caminho")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int?>("MotoId")
                        .HasColumnType("int");

                    b.Property<int?>("PecaId")
                        .HasColumnType("int");

                    b.HasKey("NomeArquivo")
                        .HasName("PK__Imagens__7CCD9D8E31372040");

                    b.HasIndex("MotoId");

                    b.HasIndex("PecaId");

                    b.ToTable("Imagens");
                });

            modelBuilder.Entity("SportMotos.Models.InteresseMotos", b =>
                {
                    b.Property<int>("IdInteresse")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_Interesse");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdInteresse"));

                    b.Property<DateTime?>("DataInteresse")
                        .HasColumnType("datetime")
                        .HasColumnName("DataInteresse");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int")
                        .HasColumnName("ID_Cliente");

                    b.Property<int>("IdMoto")
                        .HasColumnType("int")
                        .HasColumnName("ID_Moto");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("VARCHAR(20)")
                        .HasDefaultValue("Pendente")
                        .HasColumnName("Status");

                    b.HasKey("IdInteresse")
                        .HasName("PK__InteresseMotos__ID_Interesse");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdMoto");

                    b.ToTable("InteresseMotos", (string)null);
                });

            modelBuilder.Entity("SportMotos.Models.ItensPedido", b =>
                {
                    b.Property<int>("IdItemPedido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_ItemPedido");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdItemPedido"));

                    b.Property<int>("IdPeca")
                        .HasColumnType("int")
                        .HasColumnName("ID_Peca");

                    b.Property<int>("IdPedido")
                        .HasColumnType("int")
                        .HasColumnName("ID_Pedido");

                    b.Property<decimal>("PrecoUnitario")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("Quantidade")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("IdItemPedido")
                        .HasName("PK_ItensPedido");

                    b.HasIndex("IdPeca");

                    b.HasIndex("IdPedido");

                    b.ToTable("ItensPedido", (string)null);
                });

            modelBuilder.Entity("SportMotos.Models.Moto", b =>
                {
                    b.Property<int>("IdMoto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_Moto");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMoto"));

                    b.Property<bool>("Abs")
                        .HasColumnType("bit")
                        .HasColumnName("ABS");

                    b.Property<int>("Ano")
                        .HasColumnType("int");

                    b.Property<string>("Caixa")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Carta")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .IsFixedLength();

                    b.Property<int>("Cilindrada")
                        .HasColumnType("int");

                    b.Property<string>("Combustivel")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Condicao")
                        .IsRequired()
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("Cor")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("char(15)")
                        .IsFixedLength();

                    b.Property<string>("Descricao")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("Matricula")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)");

                    b.Property<double>("Preco")
                        .HasColumnType("float");

                    b.Property<int>("Quilometragem")
                        .HasColumnType("int");

                    b.Property<string>("Segmento")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("IdMoto")
                        .HasName("PK__Moto__7BA373CF34EB2800");

                    b.ToTable("Moto", (string)null);
                });

            modelBuilder.Entity("SportMotos.Models.Noticium", b =>
                {
                    b.Property<int>("IdNoticia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_Noticia");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdNoticia"));

                    b.Property<DateTime?>("ApagadoEm")
                        .HasColumnType("datetime")
                        .HasColumnName("Apagado_Em");

                    b.Property<DateTime?>("DataEdicao")
                        .HasColumnType("datetime")
                        .HasColumnName("Data_Edicao");

                    b.Property<DateTime>("DataPublicacao")
                        .HasColumnType("datetime")
                        .HasColumnName("Data_Publicacao");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("SubTitulo")
                        .HasMaxLength(80)
                        .IsUnicode(false)
                        .HasColumnType("varchar(80)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.HasKey("IdNoticia")
                        .HasName("PK__Noticia__58E91D2061BD467F");

                    b.ToTable("Noticia");
                });

            modelBuilder.Entity("SportMotos.Models.Orcamento", b =>
                {
                    b.Property<int>("IdOrcamento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_Orcamento");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdOrcamento"));

                    b.Property<DateTime>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("Data_Criacao")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Descricao");

                    b.Property<bool>("DetalhesVisualizados")
                        .HasColumnType("bit");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int")
                        .HasColumnName("ID_Cliente");

                    b.Property<string>("MetodoPagamento")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Metodo_Pagamento");

                    b.Property<string>("NotasAdministrador")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("Notas_Administrador");

                    b.Property<DateTime?>("PrazoResposta")
                        .HasColumnType("datetime")
                        .HasColumnName("Prazo_Resposta");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("Pendente")
                        .HasColumnName("Status");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("Ultima_Atualizacao")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<double>("ValorTotal")
                        .HasColumnType("float")
                        .HasColumnName("Valor_Total");

                    b.HasKey("IdOrcamento")
                        .HasName("PK__Orcament__0503F9406E8490D9");

                    b.HasIndex("IdCliente");

                    b.ToTable("Orcamento", (string)null);
                });

            modelBuilder.Entity("SportMotos.Models.OrcamentoPeca", b =>
                {
                    b.Property<int>("IdOrcamentoPeca")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_OrcamentoPeca");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdOrcamentoPeca"));

                    b.Property<int>("IdOrcamento")
                        .HasColumnType("int")
                        .HasColumnName("ID_Orcamento");

                    b.Property<int>("IdPeca")
                        .HasColumnType("int")
                        .HasColumnName("ID_Peca");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int")
                        .HasColumnName("Quantidade");

                    b.HasKey("IdOrcamentoPeca")
                        .HasName("PK_OrcamentoPeca");

                    b.HasIndex("IdOrcamento");

                    b.HasIndex("IdPeca");

                    b.ToTable("OrcamentoPeca");
                });

            modelBuilder.Entity("SportMotos.Models.PasswordResets", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Expiration")
                        .HasColumnType("datetime");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int")
                        .HasColumnName("ID_Cliente");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id")
                        .HasName("PK_PasswordResets");

                    b.HasIndex("IdCliente");

                    b.ToTable("PasswordResets", (string)null);
                });

            modelBuilder.Entity("SportMotos.Models.Peca", b =>
                {
                    b.Property<int>("IdPeca")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_Peca");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPeca"));

                    b.Property<string>("Categoria")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Compatibilidade")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<int>("DataFabricacao")
                        .HasColumnType("int")
                        .HasColumnName("Data_Fabricacao");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<byte?>("Garantia")
                        .HasColumnType("tinyint");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("Modelo")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<double?>("Peso")
                        .HasColumnType("float");

                    b.Property<double>("Preco")
                        .HasColumnType("float");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("IdPeca")
                        .HasName("PK__Peca__B5902415D520233E");

                    b.ToTable("Peca", (string)null);
                });

            modelBuilder.Entity("SportMotos.Models.Resposta", b =>
                {
                    b.Property<int>("IdResposta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_Resposta");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdResposta"));

                    b.Property<string>("Conteudo")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime")
                        .HasColumnName("Data_Criacao");

                    b.Property<int?>("IdAdmin")
                        .HasColumnType("int")
                        .HasColumnName("ID_Admin");

                    b.Property<int?>("IdCliente")
                        .HasColumnType("int")
                        .HasColumnName("ID_Cliente");

                    b.Property<int>("IdForum")
                        .HasColumnType("int")
                        .HasColumnName("ID_Forum");

                    b.HasKey("IdResposta")
                        .HasName("PK__Resposta__69F567662E7796DA");

                    b.HasIndex("IdAdmin");

                    b.HasIndex("IdCliente");

                    b.HasIndex("IdForum");

                    b.ToTable("Resposta", (string)null);
                });

            modelBuilder.Entity("SportMotos.Models.User", b =>
                {
                    b.Property<string>("Username")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("Data_Criacao")
                        .HasColumnType("datetime")
                        .HasColumnName("Data_Criacao");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Tipo_Utilizador")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Tipo_Utilizador");

                    b.Property<DateTime>("Ultimo_Login")
                        .HasColumnType("datetime")
                        .HasColumnName("Ultimo_Login");

                    b.HasKey("Username")
                        .HasName("PK__Users__536C85E5DE2018A1");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SportMotos.Models.VendaPeca", b =>
                {
                    b.Property<int>("IdVenda")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdVenda"));

                    b.Property<DateTime>("DataVenda")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdAnuncio")
                        .HasColumnType("int");

                    b.Property<decimal>("PrecoUnitario")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.HasKey("IdVenda");

                    b.HasIndex("IdAnuncio");

                    b.ToTable("VendaPeca");
                });

            modelBuilder.Entity("Pedidos", b =>
                {
                    b.HasOne("SportMotos.Models.Cliente", null)
                        .WithMany("Pedido")
                        .HasForeignKey("ClienteIdCliente");

                    b.HasOne("SportMotos.Models.Cliente", "Cliente")
                        .WithMany("Pedidos")
                        .HasForeignKey("IdCliente")
                        .IsRequired()
                        .HasConstraintName("FK__Pedidos__Cliente");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("SportMotos.Models.Admin", b =>
                {
                    b.HasOne("SportMotos.Models.User", "NomeNavigation")
                        .WithOne("Admin")
                        .HasForeignKey("SportMotos.Models.Admin", "Nome")
                        .IsRequired()
                        .HasConstraintName("FK__Admin__Nome__3C69FB99");

                    b.Navigation("NomeNavigation");
                });

            modelBuilder.Entity("SportMotos.Models.AnuncioMoto", b =>
                {
                    b.HasOne("SportMotos.Models.Moto", "IdMotoNavigation")
                        .WithMany("AnuncioMotos")
                        .HasForeignKey("IdMoto")
                        .IsRequired()
                        .HasConstraintName("FK__Anuncio_M__ID_Mo__66603565");

                    b.Navigation("IdMotoNavigation");
                });

            modelBuilder.Entity("SportMotos.Models.AnuncioPeca", b =>
                {
                    b.HasOne("SportMotos.Models.Peca", "IdPecaNavigation")
                        .WithMany("AnuncioPecas")
                        .HasForeignKey("IdPeca")
                        .IsRequired()
                        .HasConstraintName("FK__Anuncio_P__ID_Pe__6E01572D");

                    b.Navigation("IdPecaNavigation");
                });

            modelBuilder.Entity("SportMotos.Models.CarrinhoCompras", b =>
                {
                    b.HasOne("SportMotos.Models.Cliente", "Cliente")
                        .WithMany("CarrinhoCompras")
                        .HasForeignKey("IdCliente")
                        .IsRequired()
                        .HasConstraintName("FK__CarrinhoCompras__ID_Cliente");

                    b.HasOne("SportMotos.Models.Peca", "Peca")
                        .WithMany("CarrinhoCompras")
                        .HasForeignKey("IdPeca")
                        .IsRequired()
                        .HasConstraintName("FK__CarrinhoCompras__ID_Peca");

                    b.Navigation("Cliente");

                    b.Navigation("Peca");
                });

            modelBuilder.Entity("SportMotos.Models.Cliente", b =>
                {
                    b.HasOne("SportMotos.Models.User", "NomeNavigation")
                        .WithOne("Cliente")
                        .HasForeignKey("SportMotos.Models.Cliente", "Nome")
                        .IsRequired()
                        .HasConstraintName("FK__Cliente__Nome__5629CD9C");

                    b.Navigation("NomeNavigation");
                });

            modelBuilder.Entity("SportMotos.Models.EnderecosEnvio", b =>
                {
                    b.HasOne("SportMotos.Models.Cliente", "Cliente")
                        .WithMany("EnderecosEnvio")
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("SportMotos.Models.Favoritos", b =>
                {
                    b.HasOne("SportMotos.Models.AnuncioMoto", "AnuncioMoto")
                        .WithMany()
                        .HasForeignKey("Id_Anuncio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Favoritos_AnuncioMotos");

                    b.HasOne("SportMotos.Models.AnuncioPeca", "AnuncioPeca")
                        .WithMany()
                        .HasForeignKey("Id_Anuncio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Favoritos_AnuncioPecas");

                    b.HasOne("SportMotos.Models.Cliente", "Cliente")
                        .WithMany("Favoritos")
                        .HasForeignKey("Id_Cliente")
                        .IsRequired()
                        .HasConstraintName("FK_Favoritos_Cliente");

                    b.Navigation("AnuncioMoto");

                    b.Navigation("AnuncioPeca");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("SportMotos.Models.Forum", b =>
                {
                    b.HasOne("SportMotos.Models.Admin", "IdAdminNavigation")
                        .WithMany("Forums")
                        .HasForeignKey("IdAdmin")
                        .HasConstraintName("FK_Forum_Admin");

                    b.HasOne("SportMotos.Models.Cliente", "IdClienteNavigation")
                        .WithMany("Forums")
                        .HasForeignKey("IdCliente")
                        .HasConstraintName("FK_Forum_Cliente");

                    b.Navigation("IdAdminNavigation");

                    b.Navigation("IdClienteNavigation");
                });

            modelBuilder.Entity("SportMotos.Models.Imagem", b =>
                {
                    b.HasOne("SportMotos.Models.Moto", "Moto")
                        .WithMany("Imagens")
                        .HasForeignKey("MotoId");

                    b.HasOne("SportMotos.Models.Peca", "Peca")
                        .WithMany("Imagens")
                        .HasForeignKey("PecaId");

                    b.Navigation("Moto");

                    b.Navigation("Peca");
                });

            modelBuilder.Entity("SportMotos.Models.InteresseMotos", b =>
                {
                    b.HasOne("SportMotos.Models.Cliente", "Cliente")
                        .WithMany("Interesses")
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__InteresseMotos__ID_Cliente");

                    b.HasOne("SportMotos.Models.Moto", "Moto")
                        .WithMany("Interesses")
                        .HasForeignKey("IdMoto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__InteresseMotos__ID_Moto");

                    b.Navigation("Cliente");

                    b.Navigation("Moto");
                });

            modelBuilder.Entity("SportMotos.Models.ItensPedido", b =>
                {
                    b.HasOne("SportMotos.Models.Peca", "Peca")
                        .WithMany("Itens")
                        .HasForeignKey("IdPeca")
                        .IsRequired()
                        .HasConstraintName("FK_ItensPedido_Peca");

                    b.HasOne("Pedidos", "Pedido")
                        .WithMany("Itens")
                        .HasForeignKey("IdPedido")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ItensPedido_Pedidos");

                    b.Navigation("Peca");

                    b.Navigation("Pedido");
                });

            modelBuilder.Entity("SportMotos.Models.Orcamento", b =>
                {
                    b.HasOne("SportMotos.Models.Cliente", "IdClienteNavigation")
                        .WithMany("Orcamentos")
                        .HasForeignKey("IdCliente")
                        .IsRequired()
                        .HasConstraintName("FK__Orcamento__ID_Cl__619B8048");

                    b.Navigation("IdClienteNavigation");
                });

            modelBuilder.Entity("SportMotos.Models.OrcamentoPeca", b =>
                {
                    b.HasOne("SportMotos.Models.Orcamento", "IdOrcamentoNavigation")
                        .WithMany("OrcamentoPecas")
                        .HasForeignKey("IdOrcamento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_OrcamentoPeca_Orcamento");

                    b.HasOne("SportMotos.Models.Peca", "IdPecaNavigation")
                        .WithMany("OrcamentoPecas")
                        .HasForeignKey("IdPeca")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_OrcamentoPeca_Peca");

                    b.Navigation("IdOrcamentoNavigation");

                    b.Navigation("IdPecaNavigation");
                });

            modelBuilder.Entity("SportMotos.Models.PasswordResets", b =>
                {
                    b.HasOne("SportMotos.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("IdCliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("SportMotos.Models.Resposta", b =>
                {
                    b.HasOne("SportMotos.Models.Admin", "IdAdminNavigation")
                        .WithMany()
                        .HasForeignKey("IdAdmin")
                        .HasConstraintName("FK__Resposta__ID_Admin");

                    b.HasOne("SportMotos.Models.Cliente", "IdClienteNavigation")
                        .WithMany()
                        .HasForeignKey("IdCliente")
                        .HasConstraintName("FK__Resposta__ID_Cliente");

                    b.HasOne("SportMotos.Models.Forum", "IdForumNavigation")
                        .WithMany("Respostas")
                        .HasForeignKey("IdForum")
                        .IsRequired()
                        .HasConstraintName("FK__Resposta__ID_Forum");

                    b.Navigation("IdAdminNavigation");

                    b.Navigation("IdClienteNavigation");

                    b.Navigation("IdForumNavigation");
                });

            modelBuilder.Entity("SportMotos.Models.VendaPeca", b =>
                {
                    b.HasOne("SportMotos.Models.AnuncioPeca", "AnuncioPeca")
                        .WithMany()
                        .HasForeignKey("IdAnuncio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnuncioPeca");
                });

            modelBuilder.Entity("Pedidos", b =>
                {
                    b.Navigation("Itens");
                });

            modelBuilder.Entity("SportMotos.Models.Admin", b =>
                {
                    b.Navigation("Forums");
                });

            modelBuilder.Entity("SportMotos.Models.Cliente", b =>
                {
                    b.Navigation("CarrinhoCompras");

                    b.Navigation("EnderecosEnvio");

                    b.Navigation("Favoritos");

                    b.Navigation("Forums");

                    b.Navigation("Interesses");

                    b.Navigation("Orcamentos");

                    b.Navigation("Pedido");

                    b.Navigation("Pedidos");
                });

            modelBuilder.Entity("SportMotos.Models.Forum", b =>
                {
                    b.Navigation("Respostas");
                });

            modelBuilder.Entity("SportMotos.Models.Moto", b =>
                {
                    b.Navigation("AnuncioMotos");

                    b.Navigation("Imagens");

                    b.Navigation("Interesses");
                });

            modelBuilder.Entity("SportMotos.Models.Orcamento", b =>
                {
                    b.Navigation("OrcamentoPecas");
                });

            modelBuilder.Entity("SportMotos.Models.Peca", b =>
                {
                    b.Navigation("AnuncioPecas");

                    b.Navigation("CarrinhoCompras");

                    b.Navigation("Imagens");

                    b.Navigation("Itens");

                    b.Navigation("OrcamentoPecas");
                });

            modelBuilder.Entity("SportMotos.Models.User", b =>
                {
                    b.Navigation("Admin");

                    b.Navigation("Cliente");
                });
#pragma warning restore 612, 618
        }
    }
}

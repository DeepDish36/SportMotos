@model SportMotos.Models.DetalhesOrcamentoViewModel

@{
    ViewData["Title"] = "Detalhes do Orçamento";
}

<link href="~/datatable/datatables.css" rel="stylesheet" />

<h2 class="mb-4">Detalhes do Orçamento</h2>

<div class="card p-3 mb-4">
    <h4 class="card-title">Informações do Cliente</h4>
    <p><strong>Nome:</strong> @Model.Orcamento.IdClienteNavigation.Nome</p>
    <p><strong>Email:</strong> @Model.Orcamento.IdClienteNavigation.Email</p>
</div>

<div class="card p-3 mb-4">
    <h4 class="card-title">Detalhes do Orçamento</h4>
    <p><strong>Descrição:</strong> @Model.Orcamento.Descricao</p>
    <p><strong>Status:</strong> @Model.Orcamento.Status</p>
    <p><strong>Data de Criação:</strong> @Model.Orcamento.DataCriacao.ToString("dd/MM/yyyy")</p>
    <p><strong>Data de Atualização:</strong> @Model.Orcamento.UltimaAtualizacao.ToString("dd/MM/yyyy")</p>
</div>

<hr />

<h3>Selecione as Peças Necessárias</h3>
<form method="post" asp-action="SalvarPecasSelecionadas" asp-controller="Contactos">
    <input type="hidden" name="IdOrcamento" value="@Model.Orcamento.IdOrcamento" />

    <table id="pecasTable" class="table table-striped table-bordered">
        <thead>
            <tr>
                <th>Selecionar</th>
                <th>Nome</th>
                <th>Marca</th>
                <th>Modelo</th>
                <th>Quantidade em Estoque</th>
                <th>Preço Unitário (€)</th>
                <th>Quantidade Necessária</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var peca in Model.PecasDisponiveis)
            {
                // Procurar se a peça foi incluída no orçamento
                var pecaSelecionada = Model.Orcamento.OrcamentoPecas.FirstOrDefault(op => op.IdPeca == peca.IdPeca);
                bool estaSelecionada = pecaSelecionada != null;
                int quantidadeSelecionada = estaSelecionada ? pecaSelecionada.Quantidade : 0;

                <tr data-id="@peca.IdPeca" data-preco="@peca.Preco">
                    <td>
                        <input type="checkbox" name="PecasSelecionadas" value="@peca.IdPeca"
                        @(estaSelecionada ? "checked" : "")
                        @(Model.Orcamento.Status == "Aprovado" ? "disabled" : "") />
                    </td>
                    <td>@peca.Nome</td>
                    <td>@peca.Marca</td>
                    <td>@peca.Modelo</td>
                    <td>@peca.Stock</td>
                    <td>@peca.Preco</td>
                    <td>
                        <input type="number" name="Quantidades[@peca.IdPeca]" class="form-control"
                               min="1" max="@peca.Stock"
                               value="@quantidadeSelecionada"
                        @(estaSelecionada ? "" : "disabled")
                        @(Model.Orcamento.Status == "Aprovado" ? "readonly" : "") />
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <p id="valorTotal" class="mt-3"><strong>Total:</strong> €0.00</p>

    <div class="d-flex justify-content-between mt-3">
        <button type="submit" class="btn btn-primary" @(Model.Orcamento.Status == "Aprovado" ? "disabled" : "")>Salvar Seleção</button>
        <a href="@Url.Action("Dashboard", "DashBoard")" class="btn btn-secondary">Voltar ao Dashboard</a>
    </div>
</form>

@section Scripts {
    <script src="~/datatable/datatables.js"></script>
    <script>
                document.querySelector("form").addEventListener("submit", function (e) {
            console.log("Formulário enviado.");
            const formData = new FormData(this);
            for (const [key, value] of formData.entries()) {
                console.log(`${key}: ${value}`);
            }
        });

            $(document).ready(function () {
            // Desabilitar o campo de quantidade por padrão
            $("input[name^='Quantidades']").prop("disabled", true);

            // Monitorar mudanças nas checkboxes
            $("input[name='PecasSelecionadas']").change(function () {
                const quantidadeInput = $(`input[name='Quantidades[${$(this).val()}]']`);
                quantidadeInput.prop("disabled", !$(this).is(":checked")); // Habilita ou desabilita o campo de quantidade
            });
        });

                $(document).ready(function () {
            if ('@Model.Orcamento.Status' === "Pendente") { // Só ativa se ainda estiver pendente
                $('#pecasTable').DataTable({
                    language: {
                        url: "/datatable/langconfig.json"
                    },
                    paging: true,
                    searching: true,
                    ordering: true,
                    columnDefs: [
                        { orderable: false, targets: [0, 5] }
                    ]
                });
            }
        });


            $(document).on("change", "input[name^='Quantidades'], input[name='PecasSelecionadas']", function () {
            let total = 0;

            // Iterar sobre todas as peças selecionadas
            $("input[name='PecasSelecionadas']:checked").each(function () {
                const pecaId = $(this).val();
                const quantidade = parseFloat($(`input[name='Quantidades[${pecaId}]']`).val()) || 0; // Quantidade padrão: 0
                const preco = parseFloat($(`tr[data-id='${pecaId}']`).data("preco")) || 0; // Preço padrão: 0

                if (quantidade > 0 && preco > 0) {
                    total += quantidade * preco; // Adiciona ao total
                }
            });

            // Atualizar o total na página
            $("#valorTotal").text(`Total: €${total.toFixed(2)}`);
        });
    </script>
}

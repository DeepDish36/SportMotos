@model SportMotos.Models.EnderecosEnvio

@{
    ViewData["Title"] = "Finalizar Compra";
}
@if (TempData["Erro"] != null)
{
    <div class="alert alert-danger" role="alert">
        @TempData["Erro"]
    </div>
}
@if (TempData["Sucesso"] != null)
{
    <div class="alert alert-success" role="alert">
        @TempData["Sucesso"]
    </div>
}
<h2>Finalizar Compra</h2>

<form method="post" asp-action="ProcessarCheckout">
    <div class="row">
        <input type="hidden" name="IdCliente" value="@ViewBag.IdCliente">
        <div class="col-md-6">
            <h3>Informações de Envio</h3>

            <div class="mb-3">
                <label class="form-label">Email</label>
                <input type="email" class="form-control" required>
            </div>

            <!-- Nome e Apelido lado a lado -->
            <div class="row">
                <div class="col-md-6 mb-3">
                    <label class="form-label">Nome</label>
                    <input type="text" asp-for="Nome" class="form-control" required>
                    <span asp-validation-for="Nome" class="text-danger"></span>
                </div>
                <div class="col-md-6 mb-3">
                    <label class="form-label">Apelido</label>
                    <input type="text" asp-for="Apelido" class="form-control" required>
                    <span asp-validation-for="Apelido" class="text-danger"></span>
                </div>
            </div>

            <div class="mb-3">
                <label class="form-label">Telefone</label>
                <input type="text" asp-for="Telefone" class="form-control" required>
                <span asp-validation-for="Telefone" class="text-danger"></span>
            </div>

            <div class="mb-3">
                <label class="form-label">Localidade</label>
                <input type="text" asp-for="Localidade" class="form-control" required>
                <span asp-validation-for="Localidade" class="text-danger"></span>
            </div>

            <!-- Cidade e Código Postal lado a lado -->
            <div class="row">
                <div class="col-md-6 mb-3">
                    <label class="form-label">Cidade</label>
                    <input type="text" asp-for="Cidade" class="form-control" required>
                    <span asp-validation-for="Cidade" class="text-danger"></span>
                </div>
                <div class="col-md-6 mb-3">
                    <label class="form-label">Código Postal</label>
                    <input type="text" asp-for="CodigoPostal" class="form-control" required>
                    <span asp-validation-for="CodigoPostal" class="text-danger"></span>
                </div>
            </div>

            <div class="mb-3 form-check">
                <input type="checkbox" id="pickupCheckbox" asp-for="RetiradaNaLoja" class="form-check-input">
                <label class="form-check-label">Levantar na loja</label>
            </div>

            <div class="mb-3">
                <h3>Método de pagamento</h3>
                <select id="paymentMethod" name="MetodoPagamento" class="form-select">
                    <option value="">Selecione...</option>
                    <option value="visa">Visa/Mastercard</option>
                    <option value="paypal">PayPal</option>
                    <option value="mbway">MB WAY</option>
                </select>
            </div>

            <div id="paymentDetails" style="display: none;">
                <div id="visaFields" style="display: none;">
                    <label class="form-label">Número do Cartão</label>
                    <input type="text" name="NumeroCartao" id="NumeroCartao" class="form-control" placeholder="XXXX XXXX XXXX XXXX">
                    <label class="form-label">
                        CVV
                        <span data-bs-toggle="tooltip" title="Os 3 dígitos atrás do cartão">❓</span>
                    </label>
                    <input type="text" name="CVV" class="form-control" placeholder="XXX">
                    <label class="form-label">Válido até</label>
                    <input type="text" name="DataExpiracao" id="validUntil" class="form-control" placeholder="MM/AA" required>

                    <script>
                        document.getElementById("validUntil").addEventListener("input", function () {
                            this.value = this.value.replace(/[^0-9/]/g, ""); // 🔥 Permite apenas números e "/"

                            if (this.value.length === 2 && !this.value.includes("/")) {
                                this.value += "/"; // 🔥 Adiciona "/" automaticamente após o mês
                            }

                            if (this.value.length > 5) {
                                this.value = this.value.slice(0, 5); // 🔥 Limita o campo a "MM/AA"
                            }
                        });
                    </script>
                </div>

                <div id="paypalFields" style="display: none;">
                    <label class="form-label">Email do PayPal</label>
                    <input type="email" class="form-control" placeholder="email@exemplo.com">
                </div>

                <div id="mbwayFields" style="display: none;">
                    <label class="form-label">Número de Telefone MB WAY</label>
                    <input type="text" class="form-control" placeholder="XXXXXXXXX">
                    <span id="mbwayPin" class="text-success"></span>
                </div>
            </div>
        </div>

        <!-- 🔥 Resumo do Carrinho -->
        <div class="col-md-6">
            <h3>Resumo do Carrinho</h3>
            <ul class="list-group">
                @foreach (var item in ViewBag.Carrinho)
                {
                    <li class="list-group-item d-flex justify-content-between align-items-center">
                        <div class="d-flex align-items-center">
                            <img src="@Url.Content("~/images/pecas/" + item.IdPeca + ".jpg")" class="rounded me-3" style="width: 80px; height: 80px;">
                            <div>
                                <h5>@item.Peca.Nome @item.Peca.Marca @item.Peca.Modelo</h5>
                                <p class="text-muted">Qtd.: @item.Quantidade</p>
                                <p class="text-muted">Preço: €@item.Peca.Preco.ToString("0.00")</p>
                            </div>
                        </div>
                    </li>
                }
            </ul>

            <hr>
            <h4>
                Total: <strong>€<span id="totalPrice">@ViewBag.TotalCompra.ToString("0.00")</span></strong>
                <span id="extraFee" style="display: inline;">+ €5</span>
            </h4>

            <!-- 🔥 Botão de checkout -->
            <button type="submit" class="btn btn-success w-100 mt-3">Fazer Checkout</button>

            <p class="mt-3 text-muted">Garantia de devolução em 30 dias.</p>
        </div>
    </div>
</form>
<script>
            document.addEventListener("DOMContentLoaded", function () {
        // 🔥 Captura elementos da página
        const numeroCartao = document.getElementById("NumeroCartao");
        const paymentMethod = document.getElementById("paymentMethod");
        const paymentDetails = document.getElementById("paymentDetails");
        const visaFields = document.getElementById("visaFields");
        const paypalFields = document.getElementById("paypalFields");
        const mbwayFields = document.getElementById("mbwayFields");
        const pickupCheckbox = document.getElementById("pickupCheckbox");
        const extraFee = document.getElementById("extraFee");
        const mbwayPin = document.getElementById("mbwayPin");

        // 🔥 Validação do cartão de crédito (Algoritmo de Luhn)
        function validarCartao(numeroCartao) {
            let soma = 0;
            let alternar = false;

            numeroCartao = numeroCartao.replace(/\D/g, ""); // 🔥 Remove caracteres não numéricos

            for (let i = numeroCartao.length - 1; i >= 0; i--) {
                let n = parseInt(numeroCartao[i]);
                if (alternar) {
                    n *= 2;
                    if (n > 9) n -= 9;
                }
                soma += n;
                alternar = !alternar;
            }

            return soma % 10 === 0; // 🔥 Retorna true se o número do cartão for válido
        }

        if (numeroCartao) {
            numeroCartao.addEventListener("input", function () {
                const valido = validarCartao(this.value);
                this.style.borderColor = valido ? "green" : "red"; // 🔥 Indica validade do cartão
            });
        } else {
            console.error("Erro: O campo Número do Cartão não foi encontrado!");
        }

        // 🔥 Transição suave ao escolher método de pagamento
        if (paymentMethod && paymentDetails) {
        paymentMethod.addEventListener("change", function () {
            const selectedPayment = this.value;

            paymentDetails.style.display = "none"; // 🔥 Esconde a seção geral de detalhes
            visaFields.style.display = "none";
            paypalFields.style.display = "none";
            mbwayFields.style.display = "none";

            if (selectedPayment) {
                paymentDetails.style.display = "block"; // 🔥 Exibe o container
                document.getElementById(selectedPayment + "Fields").style.display = "block"; // 🔥 Exibe os campos específicos
            }
        });
    } else {
        console.error("Erro: Elementos do pagamento não encontrados!");
    }

        let pinMBWay = null;

        function gerarPIN() {
            return Math.floor(100000 + Math.random() * 900000); // Gera um PIN de 6 dígitos
        }

        if (mbwayFields && mbwayPin) {
            mbwayFields.addEventListener("focusin", function () {
                if (!pinMBWay) { // Gera apenas se ainda for null
                    pinMBWay = gerarPIN();
                    mbwayPin.textContent = `PIN: ${pinMBWay} (expira em 5 min)`;
                    mbwayPin.style.display = "block";
                }
            });
        } else {
            console.error("Erro: Elementos do MB WAY não encontrados!");
        }

        // 🔥 Ocultar ou mostrar taxa de entrega de €5 dependendo da escolha "Levantar na loja"
        if (pickupCheckbox && extraFee) {
            pickupCheckbox.addEventListener("change", function () {
                extraFee.style.display = this.checked ? "none" : "inline";
            });
        } else {
            console.error("Erro: Elementos não encontrados para cálculo de taxas!");
        }
    });
</script>
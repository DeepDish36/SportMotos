@model Forum
@using Markdig

@{
    ViewData["Title"] = @Model.Titulo;

    // Captura os IDs do usuário logado
    var idClienteLogado = User.FindFirst("IdCliente")?.Value;
    var idAdminLogado = User.FindFirst("IdAdmin")?.Value;
}

<div class="container mt-4">
    <h2><i class="fas fa-comments"></i> @Model.Titulo</h2>
    <hr />

    <!-- Informações do fórum -->
    <div class="forum-info">
        <p><strong>Categoria:</strong> @Model.Categoria</p>
        <p><strong>Estado:</strong> @Model.Estado</p>
        <p><strong>Publicado em:</strong> @Model.DataCriacao.ToString("dd/MM/yyyy HH:mm")</p>
    </div>

    <!-- Botões de editar/excluir (Somente autor ou admin podem ver) -->
    @if (Model.IdCliente?.ToString() == idClienteLogado || !string.IsNullOrEmpty(idAdminLogado))
    {
        <div class="mt-3">
            <a asp-action="EditarForum" asp-route-id="@Model.IdForum" class="btn btn-warning">
                <i class="fas fa-edit"></i> Editar Fórum
            </a>
            <a href="#" class="btn btn-danger" onclick="showDeleteModal('@Model.IdForum', 'forum')">Excluir Fórum</a>
        </div>
    }

    <hr />

    <!-- Descrição do fórum -->
    <div class="forum-descricao mt-3">
        <h4>Descrição</h4>
        <div class="markdown-content">
            @Html.Raw(Markdown.ToHtml(Model.Descricao))
        </div>
    </div>

    <hr />

    <!-- Respostas do fórum -->
    <h3><i class="fas fa-reply"></i> Respostas</h3>
    <div class="forum-respostas">
        @if (Model.Respostas != null && Model.Respostas.Any())
        {
            @foreach (var resposta in Model.Respostas)
            {
                <div class="resposta p-3 mb-2 bg-light border rounded">
                    <p>
                        <strong>
                            @if (resposta.IdClienteNavigation != null)
                            {
                                @resposta.IdClienteNavigation.Nome
                            }
                            else if (resposta.IdAdminNavigation != null)
                            {
                                @resposta.IdAdminNavigation.Nome
                            }
                            else
                            {
                                <span class="text-muted">Utilizador desconhecido</span>
                            }
                        </strong>
                        - @resposta.DataCriacao.ToString("dd/MM/yyyy HH:mm")
                    </p>

                    <!-- Texto da resposta -->
                    <p id="textoResposta_@resposta.IdResposta">@resposta.Conteudo</p>

                    <!-- Exibir botões apenas para o autor da resposta ou um administrador -->
                    @if ((resposta.IdClienteNavigation?.IdCliente.ToString() == idClienteLogado) ||
                   (resposta.IdAdminNavigation?.IdAdmin.ToString() == idAdminLogado))
                    {
                        <div class="mt-2">
                            <button type="button" class="btn btn-warning btn-sm" onclick="habilitarEdicao('@resposta.IdResposta')">
                                <i class="fas fa-edit"></i> Editar
                            </button>
                            <button class="btn btn-danger btn-sm" onclick="apagarResposta('@resposta.IdResposta')">
                                <i class="fas fa-trash-alt"></i> Apagar
                            </button>
                        </div>

                        <!-- Formulário de edição embutido -->
                        <div id="formEdicao_@resposta.IdResposta" class="mt-2" style="display: none;">
                            <textarea class="form-control" id="campoEdicao_@resposta.IdResposta">@resposta.Conteudo</textarea>
                            <button class="btn btn-primary btn-sm mt-2" onclick="salvarEdicao('@resposta.IdResposta')">Salvar</button>
                            <button class="btn btn-secondary btn-sm mt-2" onclick="cancelarEdicao('@resposta.IdResposta')">Cancelar</button>
                        </div>
                    }
                </div>
            }
        }
        else
        {
            <p class="text-muted">Ainda não há respostas. Seja o primeiro a participar!</p>
        }
    </div>

    <hr />

    <!-- Formulário para adicionar nova resposta -->
    <h3><i class="fas fa-edit"></i> Adicionar Resposta</h3>
    <form asp-action="AdicionarResposta" method="post">
        <input type="hidden" name="IdForum" value="@Model.IdForum" />
        <div class="mb-3">
            <label for="Conteudo" class="form-label">Sua resposta</label>
            <textarea name="Conteudo" class="form-control" rows="3" placeholder="Escreva sua resposta..." required></textarea>
        </div>
        <button type="submit" class="btn btn-primary"><i class="fas fa-paper-plane"></i> Enviar Resposta</button>
    </form>
</div>

<script>
    function habilitarEdicao(idResposta) {
        console.log(`🔍 Ativando edição para resposta ID: ${idResposta}`);
        document.getElementById(`textoResposta_${idResposta}`).style.display = "none";
        document.getElementById(`formEdicao_${idResposta}`).style.display = "block";
    }

    function cancelarEdicao(idResposta) {
        document.getElementById(`textoResposta_${idResposta}`).style.display = "block";
        document.getElementById(`formEdicao_${idResposta}`).style.display = "none";
    }

    async function salvarEdicao(idResposta) {
        const novoConteudo = document.getElementById(`campoEdicao_${idResposta}`).value;

        console.log(`🔍 Tentando editar resposta ID: ${idResposta}`);

        const response = await fetch(`/Forum/EditarResposta/${idResposta}`, {
            method: "POST",
            headers: {
                "Content-Type": "application/json"
            },
            credentials: "same-origin",
            body: JSON.stringify({ IdResposta: idResposta, Conteudo: novoConteudo })
        });

        const result = await response.text();
        console.log(`🔍 Resposta do servidor: ${response.status}, Detalhes: ${result}`);

        if (response.ok) {
            document.getElementById(`textoResposta_${idResposta}`).innerText = novoConteudo;
            cancelarEdicao(idResposta);
        } else {
            alert(`Erro ao atualizar a resposta (${response.status}). Detalhes: ${result}`);
        }
    }

        async function apagarResposta(idResposta) {
        if (!confirm("Tem certeza que deseja excluir esta resposta?")) {
            return;
        }

        console.log(`🔍 Apagando resposta ID: ${idResposta}`);

        const response = await fetch(`/Forum/ApagarResposta/${idResposta}`, {
            method: "DELETE",
            headers: { "Content-Type": "application/json" },
            credentials: "same-origin"
        });

        const result = await response.text();
        console.log(`🔍 Resposta do servidor: ${response.status}, Detalhes: ${result}`);

        if (response.ok) {
            // Recarrega a página após excluir a resposta
            window.location.reload();
        } else {
            alert("Erro ao excluir a resposta. Tente novamente.");
        }
    }
</script>

